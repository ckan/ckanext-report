---
name: Tests
on:
  push:
  pull_request:
    branches:
      - master

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: Install requirements
        run: pip install flake8 pycodestyle
      - name: Check syntax
        run: flake8

  test:
    needs: lint
    strategy:
      matrix:
        ckan-version: ["2.10", 2.9, 2.9-py2, 2.8, 2.7]
      fail-fast: false

    name: CKAN ${{ matrix.ckan-version }}
    runs-on: ubuntu-latest
    container:
      image: openknowledge/ckan-dev:${{ matrix.ckan-version }}
    services:
      solr:
        image: ckan/ckan-solr:${{ matrix.ckan-version }}
      postgres:
        image: ckan/ckan-postgres-dev:${{ matrix.ckan-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:3
    env:
      CKAN_SQLALCHEMY_URL: postgresql://ckan_default:pass@postgres/ckan_test
      CKAN_DATASTORE_WRITE_URL: postgresql://datastore_write:pass@postgres/datastore_test
      CKAN_DATASTORE_READ_URL: postgresql://datastore_read:pass@postgres/datastore_test
      CKAN_SOLR_URL: http://solr:8983/solr/ckan
      CKAN_REDIS_URL: redis://redis:6379/1

    steps:
      - uses: actions/checkout@v3
      - name: Install requirements
        run: |
          pip install -r requirements.txt
          pip install -r dev-requirements.txt
          pip install -e .
          # Replace default path to CKAN core config file with the one on the container
          sed -i -e 's/use = config:.*/use = config:\/srv\/app\/src\/ckan\/test-core.ini/' test.ini
      - name: Setup extension (CKAN >= 2.9)
        run: |
          CKAN_CLI=bin/ckan_cli
          chmod u+x $CKAN_CLI
          export CKAN_INI=test.ini
          $CKAN_CLI db init
          PASTER_PLUGIN=ckanext-report $CKAN_CLI report initdb
          PASTER_PLUGIN=ckanext-report $CKAN_CLI report generate tagless-datasets
      - name: Run tests
        run: pytest --ckan-ini=test.ini --cov=ckanext.report --disable-warnings ckanext/report/tests
